/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/78688294-f3da-4ae1-8ae1-a50acb12a907 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/



#include "thingProperties.h"

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection, false); //Ao definir como "false" você está configurando a cloud para que quando o produto perder a conexão ele não zerar as variáveis, ou seja, o watchdog da nuvem armazena os últimos valores
  

  
  /*
      Invoking `addCallback` on the ArduinoCloud object allows you to subscribe
      to any of the available events and decide which functions to call when they are fired.

      The functions `doThisOnConnect`, `doThisOnSync`, `doThisOnDisconnect`
      are custom functions and can be named to your likings and for this example
      they are defined/implemented at the bottom of the Sketch
  */
    ArduinoCloud.addCallback(ArduinoIoTCloudEvent::CONNECT, doThisOnConnect);
    ArduinoCloud.addCallback(ArduinoIoTCloudEvent::SYNC, doThisOnSync);
    ArduinoCloud.addCallback(ArduinoIoTCloudEvent::DISCONNECT, doThisOnDisconnect);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();

  /*Your code will be executed here*/

}

void doThisOnConnect(){
  Serial.println("OPTA conectado a Arduino IoT Cloud");
}

void doThisOnSync(){
  Serial.println("Thing Properties sincronizado");
}

void doThisOnDisconnect(){
  Serial.println("OPTA está desconectado");
  disconnectAfter();
}

void disconnectAfter(){
  Serial.println("Entrando na rotina offline"); //Depois de desconectar
  while(ArduinoCloud.connected() == 0){         //Enquanto o conexão estiver em estado 0 (offline) ele executa o break para sair desse looping e executa o void loop com a programação em offline
    break;                                      
  }
}


